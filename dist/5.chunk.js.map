{"version":3,"sources":["webpack:///./src/app/crop-management/crop-management-routing.module.ts","webpack:///./src/app/crop-management/list-crop.component.scss","webpack:///./src/app/crop-management/add-crop.component.html","webpack:///./src/app/crop-management/list-crop.component.html","webpack:///./src/app/crop-management/view-crop.component.html","webpack:///./src/app/crop-management/crop-management.module.ts","webpack:///./~/ng2-table/components/table/ng-table-filtering.directive.js?4491***","webpack:///./~/ng2-table/components/table/ng-table-paging.directive.js?0fb4***","webpack:///./~/ng2-table/components/table/ng-table-sorting.directive.js?07df***","webpack:///./~/ng2-table/components/table/ng-table.component.js?745b***","webpack:///./~/ng2-table/components/ng-table-directives.js?c8b8***","webpack:///./~/ng2-table/components/ng-table-module.js?6bdc***","webpack:///./~/ng2-table/ng2-table.js?a372***","webpack:///./src/app/crop-management/crop.service.ts","webpack:///./src/app/crop-management/add-crop.component.ts","webpack:///./src/app/crop-management/list-crop.component.ts","webpack:///./src/app/crop-management/view-crop.component.ts"],"names":[],"mappings":"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B;AACzC,0BAA0B,gEAAgE;AAC1F;AACA;AACA,CAAC;AACD;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC,+BAA+B,IAAI;AAC7E;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD,oBAAoB,qBAAqB;AACzC,yBAAyB,sBAAsB;AAC/C,oBAAoB,qBAAqB;AACzC,0BAA0B,0DAA0D;AACpF;AACA;AACA,CAAC;AACD;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gCAAgC,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,8BAA8B;AAC9D;AACA;AACA,qEAAqE,mBAAmB,EAAE;AAC1F;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA,SAAS;AACT;AACA,kFAAkF,wBAAwB,iDAAiD,kNAAkN,wBAAwB,mBAAmB,cAAc,qGAAqG,kFAAkF,uNAAuN,8BAA8B,4IAA4I;AAC99B,iBAAiB,IAAI;AACrB;AACA;AACA;AACA,SAAS,yCAAyC;AAClD;AACA;AACA,kBAAkB,qBAAqB;AACvC,oBAAoB,qBAAqB;AACzC,0BAA0B,sBAAsB;AAChD,yBAAyB,sBAAsB;AAC/C,qBAAqB,qBAAqB;AAC1C;AACA;AACA,CAAC;AACD;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvBA,oCAA2C;AAC3C,sCAAyF;AAEzF,IAAa,WAAW;IAMtB,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAJ9B,0CAA0C;QAClC,SAAI,GAAG,gCAAgC,CAAC;QACxC,iBAAY,GAAG,EAAE,CAAC;QAClB,UAAK,GAAG,EAAE,CAAC;IACe,CAAC;IAElC,iCAAW,GAAX;QACK,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAC3D,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,eAAe,GAAG,IAAI,sBAAe,EAAE,CAAC;QAC5C,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAE5C,uCAAuC;QAC7C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAE,gBAAgB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;IACvG,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAI;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAC3D,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,eAAe,GAAG,IAAI,sBAAe,EAAE,CAAC;QAC5C,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAE,YAAY,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;IAC5G,CAAC;IAED,6BAAO,GAAP,UAAQ,IAAI;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAC3D,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,eAAe,GAAG,IAAI,sBAAe,EAAE,CAAC;QAC5C,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAE,SAAS,GAAE,IAAI,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;IAC/G,CAAC;IAED,gCAAU,GAAV,UAAW,IAAI;QACX,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAC3D,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;QAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,eAAe,GAAG,IAAI,sBAAe,EAAE,CAAC;QAC5C,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAE,SAAS,GAAE,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC;IAClH,CAAC;IAEL,kBAAC;AAAD,CAAC;AAhDY,WAAW;IADvB,iBAAU,EAAE;yDAOe,WAAI,oBAAJ,WAAI;GANnB,WAAW,CAgDvB;AAhDY,kCAAW;;;;;;;;;;;;;;;;;;;;;ACHxB,oCAA0C;AAC1C,8CAA6C;AAC7C,uCAAyC;AAKzC,IAAa,gBAAgB;IAI3B,0BAAoB,MAAe,EAAU,YAAyB;QAAlD,WAAM,GAAN,MAAM,CAAS;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAH/D,SAAI,GAAG;YACZ,KAAK,EAAC,6GAA6G;SACpH,CAAC;IACwE,CAAC;IAE3E,kCAAO,GAAP;QAAA,iBASC;QARA,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;aACf,SAAS,CACN,aAAG;YACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACvC,CAAC,EACD,aAAG;QAEH,CAAC,CAAC,CAAC;IAC5B,CAAC;IACH,uBAAC;AAAD,CAAC;AAhBY,gBAAgB;IAH5B,gBAAS,CAAC;QACT,mCAAsC;KACvC,CAAC;yDAK6B,eAAM,oBAAN,eAAM,sDAAwB,0BAAW,oBAAX,0BAAW;GAJ3D,gBAAgB,CAgB5B;AAhBY,4CAAgB;;;;;;;;;;;;;;;;;;;;;ACP7B,oCAAkD;AAElD,8CAA6C;AAC7C,uCAAyC;AASzC,IAAa,iBAAiB;IA2B5B,2BAA2B,MAAe,EAAU,YAAyB;QAA7E,iBAeC;QAf0B,WAAM,GAAN,MAAM,CAAS;QAAU,iBAAY,GAAZ,YAAY,CAAa;QA1BrE,cAAS,GAAW,IAAI,CAAC;QAC1B,gBAAW,GAAG,EAAE,CAAC;QACjB,SAAI,GAAc,EAAE,CAAC;QACrB,YAAO,GAAc;YAC1B,EAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAC;YAC7B,EAAC,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAC;YACrC,EAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,mBAAmB,EAAC;YACzC,EAAC,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAC;YACrC,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAC;YAC/B,EAAC,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAC;SAChC,CAAC;QACK,SAAI,GAAU,CAAC,CAAC;QAChB,iBAAY,GAAU,EAAE,CAAC;QACzB,YAAO,GAAU,CAAC,CAAC;QACnB,aAAQ,GAAU,CAAC,CAAC;QACpB,WAAM,GAAU,CAAC,CAAC;QAElB,WAAM,GAAO;YAClB,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC;YAChC,SAAS,EAAE,EAAC,YAAY,EAAE,EAAE,EAAC;YAC7B,SAAS,EAAE,CAAC,eAAe,EAAE,gBAAgB,CAAC;SAC/C,CAAC;QAEM,SAAI,GAAG,EAAE,CAAC;QAGhB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE;aACX,SAAS,CACN,aAAG;YACD,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YACxB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,EACD,aAAG;YACD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,WAAW,GAAG,sBAAsB,CAAC;QAC5C,CAAC,CAAC,CAAC;IAG5B,CAAC;IAEM,oCAAQ,GAAf;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAEM,sCAAU,GAAjB,UAAkB,IAAQ,EAAE,IAA2B;QAA3B,8BAAkB,IAAI,CAAC,IAAI;QACrD,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAChD,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7E,iDAAiD;QACjD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC;IAEM,sCAAU,GAAjB,UAAkB,IAAQ,EAAE,MAAU;QACpC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;QAChD,IAAI,UAAU,GAAU,KAAK,CAAC,CAAC;QAC/B,IAAI,IAAI,GAAU,KAAK,CAAC,CAAC;QAEzB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;gBACxD,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC7B,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YACzB,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,iBAAiB;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,QAAY,EAAE,OAAW;YACzC,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC/C,MAAM,CAAC,IAAI,KAAK,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACtD,MAAM,CAAC,IAAI,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YACjC,CAAC;YACD,MAAM,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,wCAAY,GAAnB,UAAoB,IAAQ,EAAE,MAAU;QAAxC,iBAkCC;QAjCC,IAAI,YAAY,GAAc,IAAI,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAU;YAC9B,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBACrB,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,UAAC,IAAQ;oBAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;gBAChE,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,YAAY,CAAC;QACtB,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,IAAQ;gBAClC,WAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC;YAA3E,CAA2E,CAAC,CAAC;QACjF,CAAC;QAED,IAAI,SAAS,GAAc,EAAE,CAAC;QAC9B,YAAY,CAAC,OAAO,CAAC,UAAC,IAAQ;YAC5B,IAAI,IAAI,GAAG,KAAK,CAAC;YACjB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,MAAU;gBAC9B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAC3E,IAAI,GAAG,IAAI,CAAC;gBACd,CAAC;YACH,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,YAAY,GAAG,SAAS,CAAC;QAEzB,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;IAEM,yCAAa,GAApB,UAAqB,MAAU,EAAE,IAA6D;QAA7D,gCAAY,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAC;QAC5F,IAAI,CAAC,WAAW,GAAE,EAAE,CAAC;QACrB,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;QACzD,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;QACrD,CAAC;QAED,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC7D,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,UAAU,CAAC;QACnF,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;IAClC,CAAC;IAEM,uCAAW,GAAlB,UAAmB,IAAS;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEH,wBAAC;AAAD,CAAC;AA9IY,iBAAiB;IAP7B,gBAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,mCAAyC;QACzC,mCAAyC;QACzC,gBAAgB;KACjB,CAAC;yDA6BoC,eAAM,oBAAN,eAAM,sDAAwB,0BAAW,oBAAX,0BAAW;GA3BlE,iBAAiB,CA8I7B;AA9IY,8CAAiB;;;;;;;;;;;;;;;;;;;;;ACZ9B,oCAA0C;AAC1C,uCAA+C;AAC/C,8CAA6C;AAI7C,IAAa,iBAAiB;IAK5B,2BAAY,KAAqB,EAAS,YAAyB;QAAnE,iBAUC;QAVyC,iBAAY,GAAZ,YAAY,CAAa;QAJ5D,WAAM,GAAG,EAAE,CAAC;QACZ,SAAI,GAAG,EAAE,CAAC;QACT,cAAS,GAAG,EAAE,CAAC;QACf,SAAI,GAAG,KAAK,CAAC;QAEpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;aACjB,SAAS,CACN,aAAG;YACD,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,EACD,aAAG;QAEH,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACzD,CAAC;IAED,gCAAI,GAAJ;QAAA,iBAUC;QATC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;aACnB,SAAS,CACN,aAAG;YACD,KAAI,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC;YACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzD,CAAC,EACD,aAAG;QAEH,CAAC,CAAC,CAAC;IAC5B,CAAC;IACH,wBAAC;AAAD,CAAC;AAtCY,iBAAiB;IAH7B,gBAAS,CAAC;QACT,mCAAuC;KACxC,CAAC;yDAMmB,uBAAc,oBAAd,uBAAc,sDAAuB,0BAAW,oBAAX,0BAAW;GALxD,iBAAiB,CAsC7B;AAtCY,8CAAiB","file":"5.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule }   from '@angular/forms';\nimport { Ng2TableModule } from 'ng2-table/ng2-table';\nimport { PaginationModule } from 'ng2-bootstrap';\nimport { ListCropComponent } from './list-crop.component';\nimport { AddCropComponent } from './add-crop.component';\nimport { ViewCropComponent } from './view-crop.component';\nimport { HttpModule } from '@angular/http';\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'Crop Management'\n    },\n    children: [\n      {\n        path: 'list',\n        component: ListCropComponent,\n        data: {\n          title: 'List'\n        }\n      },\n      {\n        path: 'add',\n        component: AddCropComponent,\n        data: {\n          title: 'Add'\n        }\n      },\n      {\n        path: 'list/:id',\n        component: ViewCropComponent,\n        data: {\n          title: 'List'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    FormsModule,\n    Ng2TableModule,\n    PaginationModule,\n    HttpModule\n  ],\n  exports: [\n    RouterModule,\n    FormsModule,\n    Ng2TableModule,\n    PaginationModule\n  ]\n})\nexport class CropManagementRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/crop-management/crop-management-routing.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/crop-management/list-crop.component.scss\n// module id = 1035\n// module chunks = 5","module.exports = \"<div>\\r\\n  <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-lg-12\\\">\\r\\n            <div class=\\\"content-header\\\">\\r\\n                <ol class=\\\"breadcrumb\\\">\\r\\n                    <li><a href=\\\"JavaScript:Void(0);\\\">Dashboard</a></li>\\r\\n                    <li><a href=\\\"JavaScript:Void(0);\\\">Crops</a></li>\\r\\n                    <li class=\\\"active\\\"><a href=\\\"JavaScript:Void(0);\\\">Add Crop</a></li>\\r\\n                </ol>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong>Add Crop</strong>\\r\\n        </div>\\r\\n         <form role=\\\"form\\\" (ngSubmit)=\\\"addCrop()\\\" #dailyExpenseForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"card-block\\\">\\r\\n           \\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-name\\\">Crop Name</label>\\r\\n                            <input autofocus type=\\\"text\\\" id=\\\"nf-name\\\" name=\\\"nf-name\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"crop.name\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-password\\\">Category</label>\\r\\n                            <select id=\\\"select\\\" name=\\\"select\\\" class=\\\"form-control\\\" size=\\\"1\\\" [(ngModel)]=\\\"crop.category\\\" required>\\r\\n                                <option >Please select</option>\\r\\n                                <option value=\\\"Category 1\\\">Category 1</option>\\r\\n                                <option value=\\\"Category 2\\\">Category 2</option>\\r\\n                                <option value=\\\"Category 3\\\">Category 3</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-variety\\\">Variety</label>\\r\\n                            <select id=\\\"select1\\\" name=\\\"select1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.variety\\\" size=\\\"1\\\">\\r\\n                                <option>Please select</option>\\r\\n                                <option value=\\\"Variety 1\\\">Variety 1</option>\\r\\n                                <option value=\\\"Variety 2\\\">Variety 2</option>\\r\\n                                <option value=\\\"Variety 3\\\">Variety 3</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-price\\\">Offer Price <i class=\\\"fa fa-rupee\\\"></i></label>\\r\\n                            <input type=\\\"number\\\" id=\\\"nf-price\\\" name=\\\"nf-price\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.price\\\" placeholder=\\\"\\\" required=\\\"\\\" min=\\\"1\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-grade\\\">Grade</label>\\r\\n                            \\r\\n\\t\\t\\t\\t\\t\\t<form class=\\\"grade\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn btn-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"grade\\\" value=\\\"A+\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.grade\\\" >A+\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn btn-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"grade\\\" value=\\\"A\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.grade\\\">A\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn btn-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"grade\\\" value=\\\"B\\\" class=\\\"active\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.grade\\\">B\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn btn-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"grade\\\" value=\\\"C\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.grade\\\">C\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</form>\\r\\n                       \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-color\\\">Color</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-color\\\" name=\\\"nf-color\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.color\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-size\\\">Size/Weight</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-size\\\" name=\\\"nf-size\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.size\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-other_speciality\\\">Other Speciality</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-other_speciality\\\" name=\\\"nf-other_speciality\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.other_speciality\\\" placeholder=\\\"\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-availibility\\\">Availibility Peroid</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-availibility\\\" name=\\\"nf-availibility\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.availibility\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-packaging\\\">Packaging</label>\\r\\n                            <select id=\\\"select2\\\" name=\\\"select2\\\" class=\\\"form-control\\\" size=\\\"1\\\" [(ngModel)]=\\\"crop.packaging\\\" required>\\r\\n                                <option >Please select</option>\\r\\n                                <option value=\\\"Pack 1\\\">Pack 1</option>\\r\\n                                <option value=\\\"Pack 2\\\">Pack 2</option>\\r\\n                                <option value=\\\"Pack 3\\\">Pack 3</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-supply_ablity\\\">Supply Ability</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-supply_ablity\\\" name=\\\"nf-supply_ablity\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.supply_ablity\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-destination_shipping\\\">Destination for Shipping*</label>\\r\\n                            <select id=\\\"select3\\\" name=\\\"select3\\\" class=\\\"form-control\\\" size=\\\"1\\\" [(ngModel)]=\\\"crop.destination_shipping\\\" required>\\r\\n                                <option >Please select</option>\\r\\n                                <option value=\\\"Shipping 1\\\">Shipping 1</option>\\r\\n                                <option value=\\\"Shipping 2\\\">Shipping 2</option>\\r\\n                                <option value=\\\"Shipping 3\\\">Shipping 3</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-pack_size\\\">Pack Size</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-pack_size\\\" name=\\\"nf-pack_size\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.pack_size\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-qty\\\">Quantity Per Pack</label>\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"input-group\\\">\\r\\n                              <input type=\\\"text\\\" id=\\\"nf-quantity_per_pack\\\" name=\\\"quantity_per_pack\\\" class=\\\"form-control\\\" aria-label=\\\"Text input with dropdown button\\\" [(ngModel)]=\\\"crop.quantity_per_pack\\\" placeholder=\\\"\\\" required>\\r\\n                              <div class=\\\"input-group-btn\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                  Kg\\r\\n                                </button>\\r\\n                                <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\r\\n                                  <a class=\\\"dropdown-item\\\" href=\\\"JavaScript:void(0)\\\">Miles</a>\\r\\n                                 \\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>                       \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-label\\\">Label/Making on Pack</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-label\\\" name=\\\"nf-label\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.label\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-paymentTerms\\\">Payment Terms</label>\\r\\n                           <form class=\\\"grade\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn btn-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"payment_mode\\\" value=\\\"COD\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.payment_method\\\">COD\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn btn-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"payment_mode\\\" value=\\\"Cheque\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.payment_method\\\">Cheque\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<label class=\\\"btn btn-default\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<input name=\\\"payment_mode\\\" value=\\\"Net Banking\\\" class=\\\"active\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.payment_method\\\">Net Banking\\r\\n\\t\\t\\t\\t\\t\\t\\t</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-moq\\\">MOQ</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-moq\\\" name=\\\"nf-moq\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.moq\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-average_lead_time\\\">Average Lead Time</label>\\r\\n                            \\r\\n                            <div class=\\\"input-group\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" aria-label=\\\"Amount (to the nearest dollar)\\\">\\r\\n                        <span class=\\\"input-group-addon width\\\">Days</span>\\r\\n                        </div>\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-additional_info\\\">Additional Information</label>\\r\\n                            <textarea type=\\\"text\\\" id=\\\"nf-additional_info\\\" name=\\\"nf-additional_info\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.additional_info\\\" placeholder=\\\"\\\" rows=\\\"4\\\" required ></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-terms\\\">Terms & Conditions</label>\\r\\n                            <textarea type=\\\"text\\\" id=\\\"nf-terms\\\" name=\\\"nf-terms\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.terms\\\" placeholder=\\\"\\\" rows=\\\"4\\\" [disabled]=\\\"true\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-image\\\">Image</label>\\r\\n\\r\\n\\r\\n                             <input type=\\\"file\\\" name=\\\"file-7[]\\\" id=\\\"file-7\\\" class=\\\"inputfile inputfile-6\\\" data-multiple-caption=\\\"{count} files selected\\\" multiple />\\r\\n                    <label for=\\\"file-7\\\"><span></span> <strong><svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"20\\\" height=\\\"17\\\" viewBox=\\\"0 0 20 17\\\"><path d=\\\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\\\"/></svg> Upload image</strong></label>\\r\\n            \\r\\n\\r\\n\\r\\n                         <!--   <input type=\\\"file\\\" name=\\\"\\\" class=\\\"form-control\\\"> -->\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"card-footer\\\">\\r\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-secondary whiteclr\\\" [routerLink]=\\\"['/crop/list']\\\"> Cancel</button>\\r\\n                    <button type=\\\"submit\\\" class=\\\"pull-right btn btn-primary orangeclr\\\">Save</button>\\r\\n                </div>\\r\\n          </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/crop-management/add-crop.component.html\n// module id = 1049\n// module chunks = 5","module.exports = \"<div> \\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-lg-12\\\">\\n        <div class=\\\"content-header\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a>Dashboard</a></li>\\n                <li><a>Crops</a></li>\\n                <li class=\\\"active\\\"><a>List</a></li>\\n            </ol>\\n        </div>\\n    </div>\\n</div>\\n\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n        <div class=\\\"row\\\">\\n        <div class=\\\"col-3\\\">\\n      <!--  <input type=\\\"text\\\" name=\\\"\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"search\\\" (ngModelChange)=\\\"doSomething($event)\\\">-->\\n        \\n        <form action=\\\"#\\\" class=\\\"pull-left ng-untouched ng-pristine ng-valid\\\" method=\\\"get\\\">\\n        <div class=\\\"input-group\\\">\\n          <input class=\\\"form-control\\\" name=\\\"q\\\" placeholder=\\\"Search\\\" type=\\\"text\\\">\\n          <span class=\\\"input-group-btn\\\">\\n          <button class=\\\"btn btn-flat\\\" id=\\\"search-btn\\\" name=\\\"search\\\" type=\\\"submit\\\"><i class=\\\"fa fa-search\\\"></i> </button>\\n          </span> </div>\\n      </form>\\n      \\n            </div>\\n       <div class=\\\"col-9 text-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success btnadd\\\" [routerLink]=\\\"['/crop/add']\\\">Add Crop</button>\\n        <div class=\\\"icns\\\">\\n                     <a><img src=\\\"assets/img/pdf.png\\\" alt=\\\"pdf\\\"></a>\\n                     <a><img src=\\\"assets/img/xls.png\\\" alt=\\\"pdf\\\"></a>\\n              </div>\\n            </div>\\n            </div>\\n        </div>\\n        <ng-table [config]=\\\"config\\\"\\n                  (tableChanged)=\\\"onChangeTable(config)\\\"\\n                  (cellClicked)=\\\"onCellClick($event)\\\"\\n                  [rows]=\\\"rows\\\" [columns]=\\\"columns\\\">\\n        </ng-table>\\n\\n        <div *ngIf=\\\"isLoading\\\" class=\\\"is-loading\\\"><i class=\\\"page-loader\\\"></i></div>\\n        <div *ngIf=\\\"err_message\\\" class=\\\"text-center text-danger\\\">{{err_message}}</div>\\n        \\n        <div class=\\\"row\\\"> \\n        <div class=\\\"col-6\\\">       \\n        <pre *ngIf=\\\"config.paging\\\" class=\\\"pagenumber\\\">Page: {{page}} / {{numPages}}</pre>\\n        </div>\\n\\n        <div class=\\\"col-6\\\">        \\n        <pagination *ngIf=\\\"config.paging\\\"\\n                    class=\\\"pagination-sm\\\"\\n                    [(ngModel)]=\\\"page\\\"\\n                    [totalItems]=\\\"length\\\"\\n                    [itemsPerPage]=\\\"itemsPerPage\\\"\\n                    [maxSize]=\\\"maxSize\\\"\\n                    [boundaryLinks]=\\\"true\\\"\\n                    [rotate]=\\\"false\\\"\\n                    (pageChanged)=\\\"onChangeTable(config, $event)\\\"\\n                    (numPages)=\\\"numPages = $event\\\">\\n        </pagination>\\n        </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\\n<!-- <div> \\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n        <input type=\\\"text\\\" name=\\\"\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"search\\\" (ngModelChange)=\\\"doSomething($event)\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" [routerLink]=\\\"['/crop/add']\\\">Add Crop</button>\\n        </div>\\n        <ng-table [config]=\\\"config\\\"\\n                  (tableChanged)=\\\"onChangeTable(config)\\\"\\n                  (cellClicked)=\\\"onCellClick($event)\\\"\\n                  [rows]=\\\"rows\\\" [columns]=\\\"columns\\\">\\n        </ng-table>\\n        <pagination *ngIf=\\\"config.paging\\\"\\n                    class=\\\"pagination-sm\\\"\\n                    [(ngModel)]=\\\"page\\\"\\n                    [totalItems]=\\\"length\\\"\\n                    [itemsPerPage]=\\\"itemsPerPage\\\"\\n                    [maxSize]=\\\"maxSize\\\"\\n                    [boundaryLinks]=\\\"true\\\"\\n                    [rotate]=\\\"false\\\"\\n                    (pageChanged)=\\\"onChangeTable(config, $event)\\\"\\n                    (numPages)=\\\"numPages = $event\\\">\\n        </pagination>\\n        <pre *ngIf=\\\"config.paging\\\" class=\\\"card card-block card-header\\\">Page: {{page}} / {{numPages}}</pre>\\n    </div>\\n</div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/crop-management/list-crop.component.html\n// module id = 1050\n// module chunks = 5","module.exports = \"<div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-lg-12\\\">\\r\\n            <div class=\\\"content-header\\\">\\r\\n                <ol class=\\\"breadcrumb\\\">\\r\\n                    <li><a href=\\\"#\\\">Dashboard</a></li>\\r\\n                    <li><a href=\\\"#\\\">Crops</a></li>\\r\\n                    <li class=\\\"active\\\"><a href=\\\"#\\\">{{!edit ? 'View' : 'Edit'}}</a></li>\\r\\n                </ol>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n<form role=\\\"form\\\" (ngSubmit)=\\\"save()\\\" #dailyExpenseForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong>{{!edit ? 'View' : 'Edit'}} Crop</strong>\\r\\n\\t\\t\\t<button class=\\\"btn btn-secondary pull-right\\\" *ngIf=\\\"!edit\\\" (click)=\\\"editCrop()\\\"><i class=\\\"fa fa-pencil\\\"></i> Edit</button>\\r\\n            <button class=\\\"btn btn-secondary whiteclr pull-right\\\" *ngIf=\\\"edit\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success orangeclr pull-right\\\" *ngIf=\\\"edit\\\">Save</button>\\r\\n        </div>\\r\\n        <div class=\\\"card-block viewmode\\\" *ngIf=\\\"!edit\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-name\\\">Crop Name*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.name}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-password\\\">Category*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.category}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-variety\\\">Variety</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.variety}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-price\\\">Offer Price <i class=\\\"fa fa-rupee\\\"></i> *</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p><i class=\\\"fa fa-rupee\\\"></i>{{crop.price}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-grade\\\">Grade</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.grade}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-color\\\">Color*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.color}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-size\\\">Size/Weight*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.size}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-otherSpeciality\\\">Other Speciality</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.other_speciality}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-availibility\\\">Availibility Period*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.availibility}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-packaging\\\">Packaging*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.packaging}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-supplyAblity\\\">Supply Ability*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.supply_ablity}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-destinationForShipping\\\">Destination for Shipping*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.destination_shipping}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-packSize\\\">Pack Size*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.pack_size}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-qty\\\">Quantity Per Pack*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.quantity_per_pack}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-label\\\">Label/Making on Pack*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.label}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-paymentTerms\\\">Payment Terms*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.payment_method}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-moq\\\">MOQ*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.moq}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-averageLeadTime\\\">Average Lead Time*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.average_lead_time}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-additionalInformation\\\">Additional Information*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.additional_info}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-termsConditions\\\">Terms & Conditions</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>{{crop.terms}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-image\\\">Image</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p><i class=\\\"fa fa-file-image-o\\\"></i> {{crop.image}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n        </div>\\r\\n        <div class=\\\"card-block\\\" *ngIf=\\\"edit\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-name\\\">Crop Name</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-name\\\" name=\\\"nf-name\\\" class=\\\"form-control\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"crop.name\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-password\\\">Category</label>\\r\\n                            <p>{{crop.category}}</p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-variety\\\">Variety</label>\\r\\n                            <select id=\\\"select1\\\" name=\\\"select1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.variety\\\" size=\\\"1\\\">\\r\\n                                <option value=\\\"0\\\">Please select</option>\\r\\n                                <option value=\\\"1\\\">Variety 1</option>\\r\\n                                <option value=\\\"2\\\">Variety 2</option>\\r\\n                                <option value=\\\"3\\\">Variety 3</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-price\\\">Offer Price <i class=\\\"fa fa-rupee\\\"></i></label>\\r\\n                            <input type=\\\"number\\\" id=\\\"nf-price\\\" name=\\\"nf-price\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.price\\\" placeholder=\\\"\\\" min='1'>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-grade\\\">Grade</label>\\r\\n                            \\r\\n                        <form class=\\\"grade\\\">\\r\\n                            <div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\r\\n                            <label class=\\\"btn btn-default\\\">\\r\\n                            <input name=\\\"grade\\\" value=\\\"A+\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.grade\\\" >A+\\r\\n                            </label>\\r\\n                            <label class=\\\"btn btn-default\\\">\\r\\n                            <input name=\\\"grade\\\" value=\\\"A\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.grade\\\">A\\r\\n                            </label>\\r\\n                            <label class=\\\"btn btn-default\\\">\\r\\n                            <input name=\\\"grade\\\" value=\\\"B\\\" class=\\\"active\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.grade\\\">B\\r\\n                            </label>\\r\\n                            <label class=\\\"btn btn-default\\\">\\r\\n                            <input name=\\\"grade\\\" value=\\\"C\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.grade\\\">C\\r\\n                            </label>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                       \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-color\\\">Color</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-color\\\" name=\\\"nf-color\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.color\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-size\\\">Size/Weight</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-size\\\" name=\\\"nf-size\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.size\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-other_speciality\\\">Other Speciality</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-other_speciality\\\" name=\\\"nf-other_speciality\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.other_speciality\\\" placeholder=\\\"\\\">\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-availibility\\\">Availibility Period</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-availibility\\\" name=\\\"nf-availibility\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.availibility\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-packaging\\\">Packaging</label>\\r\\n                            <select id=\\\"select2\\\" name=\\\"select2\\\" class=\\\"form-control\\\" size=\\\"1\\\" [(ngModel)]=\\\"crop.packaging\\\" required>\\r\\n                                <option >Please select</option>\\r\\n                                <option value=\\\"Pack 1\\\">Pack 1</option>\\r\\n                                <option value=\\\"Pack 2\\\">Pack 2</option>\\r\\n                                <option value=\\\"Pack 3\\\">Pack 3</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-supply_ablity\\\">Supply Ability</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-supply_ablity\\\" name=\\\"nf-supply_ablity\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.supply_ablity\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-destination_shipping\\\">Destination for Shipping*</label>\\r\\n                            <select id=\\\"select3\\\" name=\\\"select3\\\" class=\\\"form-control\\\" size=\\\"1\\\" [(ngModel)]=\\\"crop.destination_shipping\\\" required>\\r\\n                                <option >Please select</option>\\r\\n                                <option value=\\\"Shipping 1\\\">Shipping 1</option>\\r\\n                                <option value=\\\"Shipping 2\\\">Shipping 2</option>\\r\\n                                <option value=\\\"Shipping 3\\\">Shipping 3</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-pack_size\\\">Pack Size</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-pack_size\\\" name=\\\"nf-pack_size\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.pack_size\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-qty\\\">Quantity Per Pack</label>               \\r\\n                            <div class=\\\"input-group\\\">\\r\\n                              <input type=\\\"text\\\" id=\\\"nf-quantity_per_pack\\\" name=\\\"quantity_per_pack\\\" class=\\\"form-control\\\" aria-label=\\\"Text input with dropdown button\\\" [(ngModel)]=\\\"crop.quantity_per_pack\\\" placeholder=\\\"\\\" required>\\r\\n                              <div class=\\\"input-group-btn\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                  Kg\\r\\n                                </button>\\r\\n                                <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\r\\n                                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\r\\n                                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\r\\n                                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\r\\n                                  <div role=\\\"separator\\\" class=\\\"dropdown-divider\\\"></div>\\r\\n                                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Separated link</a>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>                       \\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-label\\\">Label/Making on Pack</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-label\\\" name=\\\"nf-label\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.label\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-paymentTerms\\\">Payment Terms</label>\\r\\n                           <form class=\\\"grade\\\">\\r\\n                            <div class=\\\"btn-group\\\" data-toggle=\\\"buttons\\\">\\r\\n                            <label class=\\\"btn btn-default\\\">\\r\\n                            <input name=\\\"payment_mode\\\" value=\\\"COD\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.payment_method\\\">COD\\r\\n                            </label>\\r\\n                            <label class=\\\"btn btn-default\\\">\\r\\n                            <input name=\\\"payment_mode\\\" value=\\\"Cheque\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.payment_method\\\">Cheque\\r\\n                            </label>\\r\\n                            <label class=\\\"btn btn-default\\\">\\r\\n                            <input name=\\\"payment_mode\\\" value=\\\"Net Banking\\\" class=\\\"active\\\" type=\\\"radio\\\" [(ngModel)]=\\\"crop.payment_method\\\">Net Banking\\r\\n                            </label>\\r\\n                            \\r\\n                            </div>\\r\\n                        </form>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-moq\\\">MOQ</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-moq\\\" name=\\\"nf-moq\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.moq\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-average_lead_time\\\">Average Lead Time</label>\\r\\n                            <input type=\\\"text\\\" id=\\\"nf-average_lead_time\\\" name=\\\"nf-average_lead_time\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.average_lead_time\\\" placeholder=\\\"\\\" required>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group has-required\\\">\\r\\n                            <label for=\\\"nf-additional_info\\\">Additional Information</label>\\r\\n                            <textarea type=\\\"text\\\" id=\\\"nf-additional_info\\\" name=\\\"nf-additional_info\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.additional_info\\\" placeholder=\\\"\\\" rows=\\\"4\\\" required ></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"nf-terms\\\">Terms & Conditions</label>\\r\\n                            <textarea type=\\\"text\\\" id=\\\"nf-terms\\\" name=\\\"nf-terms\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"crop.terms\\\" placeholder=\\\"\\\" rows=\\\"4\\\"></textarea>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</form>    \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/crop-management/view-crop.component.html\n// module id = 1051\n// module chunks = 5","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListCropComponent } from './list-crop.component';\nimport { AddCropComponent } from './add-crop.component';\nimport { ViewCropComponent } from './view-crop.component';\nimport { CropManagementRoutingModule } from './crop-management-routing.module';\nimport { CropService } from './crop.service';\n\n@NgModule({\n  imports: [\n  \tCropManagementRoutingModule,\n  \t CommonModule    \n  ],\n  providers: [\n  \tCropService\n  ],\n  declarations: [\n  \tListCropComponent,\n  \tAddCropComponent,\n  \tViewCropComponent\n  ]\n})\nexport class CropManagementModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/crop-management/crop-management.module.ts","\"use strict\";\nvar core_1 = require('@angular/core');\n// import {setProperty} from 'angular2/ts/src/core/forms/directives/shared';\nfunction setProperty(renderer, elementRef, propName, propValue) {\n    renderer.setElementProperty(elementRef, propName, propValue);\n}\nvar NgTableFilteringDirective = (function () {\n    function NgTableFilteringDirective(element, renderer) {\n        this.ngTableFiltering = {\n            filterString: '',\n            columnName: 'name'\n        };\n        this.tableChanged = new core_1.EventEmitter();\n        this.element = element;\n        this.renderer = renderer;\n        // Set default value for filter\n        setProperty(this.renderer, this.element, 'value', this.ngTableFiltering.filterString);\n    }\n    Object.defineProperty(NgTableFilteringDirective.prototype, \"config\", {\n        get: function () {\n            return this.ngTableFiltering;\n        },\n        set: function (value) {\n            this.ngTableFiltering = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTableFilteringDirective.prototype.onChangeFilter = function (event) {\n        this.ngTableFiltering.filterString = event;\n        this.tableChanged.emit({ filtering: this.ngTableFiltering });\n    };\n    NgTableFilteringDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[ngTableFiltering]' },] },\n    ];\n    /** @nocollapse */\n    NgTableFilteringDirective.ctorParameters = [\n        { type: core_1.ElementRef, },\n        { type: core_1.Renderer, },\n    ];\n    NgTableFilteringDirective.propDecorators = {\n        'ngTableFiltering': [{ type: core_1.Input },],\n        'tableChanged': [{ type: core_1.Output },],\n        'config': [{ type: core_1.Input },],\n        'onChangeFilter': [{ type: core_1.HostListener, args: ['input', ['$event.target.value'],] },],\n    };\n    return NgTableFilteringDirective;\n}());\nexports.NgTableFilteringDirective = NgTableFilteringDirective;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/table/ng-table-filtering.directive.js\n// module id = 946\n// module chunks = 0 2 3 4 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar NgTablePagingDirective = (function () {\n    function NgTablePagingDirective() {\n        this.ngTablePaging = true;\n        this.tableChanged = new core_1.EventEmitter();\n    }\n    Object.defineProperty(NgTablePagingDirective.prototype, \"config\", {\n        get: function () {\n            return this.ngTablePaging;\n        },\n        set: function (value) {\n            this.ngTablePaging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTablePagingDirective.prototype.onChangePage = function (event) {\n        // Object.assign(this.config, event);\n        if (this.ngTablePaging) {\n            this.tableChanged.emit({ paging: event });\n        }\n    };\n    NgTablePagingDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[ngTablePaging]' },] },\n    ];\n    /** @nocollapse */\n    NgTablePagingDirective.ctorParameters = [];\n    NgTablePagingDirective.propDecorators = {\n        'ngTablePaging': [{ type: core_1.Input },],\n        'tableChanged': [{ type: core_1.Output },],\n        'config': [{ type: core_1.Input },],\n        'onChangePage': [{ type: core_1.HostListener, args: ['pagechanged', ['$event'],] },],\n    };\n    return NgTablePagingDirective;\n}());\nexports.NgTablePagingDirective = NgTablePagingDirective;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/table/ng-table-paging.directive.js\n// module id = 947\n// module chunks = 0 2 3 4 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar NgTableSortingDirective = (function () {\n    function NgTableSortingDirective() {\n        this.sortChanged = new core_1.EventEmitter();\n    }\n    Object.defineProperty(NgTableSortingDirective.prototype, \"config\", {\n        get: function () {\n            return this.ngTableSorting;\n        },\n        set: function (value) {\n            this.ngTableSorting = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTableSortingDirective.prototype.onToggleSort = function (event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (this.ngTableSorting && this.column && this.column.sort !== false) {\n            switch (this.column.sort) {\n                case 'asc':\n                    this.column.sort = 'desc';\n                    break;\n                case 'desc':\n                    this.column.sort = '';\n                    break;\n                default:\n                    this.column.sort = 'asc';\n                    break;\n            }\n            this.sortChanged.emit(this.column);\n        }\n    };\n    NgTableSortingDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[ngTableSorting]' },] },\n    ];\n    /** @nocollapse */\n    NgTableSortingDirective.ctorParameters = [];\n    NgTableSortingDirective.propDecorators = {\n        'ngTableSorting': [{ type: core_1.Input },],\n        'column': [{ type: core_1.Input },],\n        'sortChanged': [{ type: core_1.Output },],\n        'config': [{ type: core_1.Input },],\n        'onToggleSort': [{ type: core_1.HostListener, args: ['click', ['$event'],] },],\n    };\n    return NgTableSortingDirective;\n}());\nexports.NgTableSortingDirective = NgTableSortingDirective;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/table/ng-table-sorting.directive.js\n// module id = 948\n// module chunks = 0 2 3 4 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar NgTableComponent = (function () {\n    function NgTableComponent(sanitizer) {\n        this.sanitizer = sanitizer;\n        // Table values\n        this.rows = [];\n        // Outputs (Events)\n        this.tableChanged = new core_1.EventEmitter();\n        this.cellClicked = new core_1.EventEmitter();\n        this.showFilterRow = false;\n        this._columns = [];\n        this._config = {};\n    }\n    Object.defineProperty(NgTableComponent.prototype, \"config\", {\n        get: function () {\n            return this._config;\n        },\n        set: function (conf) {\n            if (!conf.className) {\n                conf.className = 'table-striped table-bordered';\n            }\n            if (conf.className instanceof Array) {\n                conf.className = conf.className.join(' ');\n            }\n            this._config = conf;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgTableComponent.prototype, \"columns\", {\n        get: function () {\n            return this._columns;\n        },\n        set: function (values) {\n            var _this = this;\n            values.forEach(function (value) {\n                if (value.filtering) {\n                    _this.showFilterRow = true;\n                }\n                if (value.className && value.className instanceof Array) {\n                    value.className = value.className.join(' ');\n                }\n                var column = _this._columns.find(function (col) { return col.name === value.name; });\n                if (column) {\n                    Object.assign(column, value);\n                }\n                if (!column) {\n                    _this._columns.push(value);\n                }\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTableComponent.prototype.sanitize = function (html) {\n        return this.sanitizer.bypassSecurityTrustHtml(html);\n    };\n    Object.defineProperty(NgTableComponent.prototype, \"configColumns\", {\n        get: function () {\n            var sortColumns = [];\n            this.columns.forEach(function (column) {\n                if (column.sort) {\n                    sortColumns.push(column);\n                }\n            });\n            return { columns: sortColumns };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTableComponent.prototype.onChangeTable = function (column) {\n        this._columns.forEach(function (col) {\n            if (col.name !== column.name && col.sort !== false) {\n                col.sort = '';\n            }\n        });\n        this.tableChanged.emit({ sorting: this.configColumns });\n    };\n    NgTableComponent.prototype.getData = function (row, propertyName) {\n        return propertyName.split('.').reduce(function (prev, curr) { return prev[curr]; }, row);\n    };\n    NgTableComponent.prototype.cellClick = function (row, column) {\n        this.cellClicked.emit({ row: row, column: column });\n    };\n    NgTableComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'ng-table',\n                    template: \"\\n    <table class=\\\"table dataTable\\\" ngClass=\\\"{{config.className || ''}}\\\"\\n           role=\\\"grid\\\" style=\\\"width: 100%;\\\">\\n      <thead>\\n        <tr role=\\\"row\\\">\\n          <th *ngFor=\\\"let column of columns\\\" [ngTableSorting]=\\\"config\\\" [column]=\\\"column\\\" \\n              (sortChanged)=\\\"onChangeTable($event)\\\" ngClass=\\\"{{column.className || ''}}\\\">\\n            {{column.title}}\\n            <i *ngIf=\\\"config && column.sort\\\" class=\\\"pull-right fa\\\"\\n              [ngClass]=\\\"{'fa-chevron-down': column.sort === 'desc', 'fa-chevron-up': column.sort === 'asc'}\\\"></i>\\n          </th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngIf=\\\"showFilterRow\\\">\\n        <td *ngFor=\\\"let column of columns\\\">\\n          <input *ngIf=\\\"column.filtering\\\" placeholder=\\\"{{column.filtering.placeholder}}\\\"\\n                 [ngTableFiltering]=\\\"column.filtering\\\"\\n                 class=\\\"form-control\\\"\\n                 style=\\\"width: auto;\\\"\\n                 (tableChanged)=\\\"onChangeTable(config)\\\"/>\\n        </td>\\n      </tr>\\n        <tr *ngFor=\\\"let row of rows\\\">\\n          <td (click)=\\\"cellClick(row, column.name)\\\" *ngFor=\\\"let column of columns\\\" [innerHtml]=\\\"sanitize(getData(row, column.name))\\\"></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgTableComponent.ctorParameters = [\n        { type: platform_browser_1.DomSanitizer, },\n    ];\n    NgTableComponent.propDecorators = {\n        'rows': [{ type: core_1.Input },],\n        'config': [{ type: core_1.Input },],\n        'tableChanged': [{ type: core_1.Output },],\n        'cellClicked': [{ type: core_1.Output },],\n        'columns': [{ type: core_1.Input },],\n    };\n    return NgTableComponent;\n}());\nexports.NgTableComponent = NgTableComponent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/table/ng-table.component.js\n// module id = 949\n// module chunks = 0 2 3 4 5","\"use strict\";\nvar ng_table_component_1 = require('./table/ng-table.component');\nvar ng_table_filtering_directive_1 = require('./table/ng-table-filtering.directive');\nvar ng_table_paging_directive_1 = require('./table/ng-table-paging.directive');\nvar ng_table_sorting_directive_1 = require('./table/ng-table-sorting.directive');\nexports.NG_TABLE_DIRECTIVES = [ng_table_component_1.NgTableComponent, ng_table_filtering_directive_1.NgTableFilteringDirective, ng_table_paging_directive_1.NgTablePagingDirective, ng_table_sorting_directive_1.NgTableSortingDirective];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/ng-table-directives.js\n// module id = 950\n// module chunks = 0 2 3 4 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar common_1 = require('@angular/common');\nvar ng_table_component_1 = require('./table/ng-table.component');\nvar ng_table_filtering_directive_1 = require('./table/ng-table-filtering.directive');\nvar ng_table_paging_directive_1 = require('./table/ng-table-paging.directive');\nvar ng_table_sorting_directive_1 = require('./table/ng-table-sorting.directive');\nvar Ng2TableModule = (function () {\n    function Ng2TableModule() {\n    }\n    Ng2TableModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [common_1.CommonModule],\n                    declarations: [ng_table_component_1.NgTableComponent, ng_table_filtering_directive_1.NgTableFilteringDirective, ng_table_paging_directive_1.NgTablePagingDirective, ng_table_sorting_directive_1.NgTableSortingDirective],\n                    exports: [ng_table_component_1.NgTableComponent, ng_table_filtering_directive_1.NgTableFilteringDirective, ng_table_paging_directive_1.NgTablePagingDirective, ng_table_sorting_directive_1.NgTableSortingDirective]\n                },] },\n    ];\n    /** @nocollapse */\n    Ng2TableModule.ctorParameters = [];\n    return Ng2TableModule;\n}());\nexports.Ng2TableModule = Ng2TableModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/ng-table-module.js\n// module id = 951\n// module chunks = 0 2 3 4 5","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar ng_table_component_1 = require('./components/table/ng-table.component');\nvar ng_table_filtering_directive_1 = require('./components/table/ng-table-filtering.directive');\nvar ng_table_paging_directive_1 = require('./components/table/ng-table-paging.directive');\nvar ng_table_sorting_directive_1 = require('./components/table/ng-table-sorting.directive');\n__export(require('./components/table/ng-table.component'));\n__export(require('./components/table/ng-table-filtering.directive'));\n__export(require('./components/table/ng-table-paging.directive'));\n__export(require('./components/table/ng-table-sorting.directive'));\n__export(require('./components/ng-table-directives'));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    directives: [\n        ng_table_component_1.NgTableComponent,\n        ng_table_filtering_directive_1.NgTableFilteringDirective,\n        ng_table_sorting_directive_1.NgTableSortingDirective,\n        ng_table_paging_directive_1.NgTablePagingDirective\n    ]\n};\nvar ng_table_module_1 = require('./components/ng-table-module');\nexports.Ng2TableModule = ng_table_module_1.Ng2TableModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/ng2-table.js\n// module id = 952\n// module chunks = 0 2 3 4 5","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\n@Injectable()\nexport class CropService {\n\n  // private host = \"http://localhost:1337\";\n  private host = \"https://efarmapi.herokuapp.com\";\n  private access_token = {};\n  private token = '';\n  constructor(private http: Http) { }\n\n  \tcroplisting() {\n        this.access_token = JSON.parse(localStorage.getItem(\"user\"));\n        this.token = 'Bearer ' + this.access_token[\"access_token\"];\n        let headers = new Headers();        \n        let urlSearchParams = new URLSearchParams();\n        headers.append('Authorization', this.token);\n        \n        //let body = urlSearchParams.toString()\n\t\treturn this.http.get(this.host +'/crops/listing', { headers: headers }).map((res:Response) => res.json())\n    }\n\n    addCrop(crop) {\n        this.access_token = JSON.parse(localStorage.getItem(\"user\"));\n        this.token = 'Bearer ' + this.access_token[\"access_token\"];\n        let headers = new Headers();        \n        let urlSearchParams = new URLSearchParams();\n        headers.append('Authorization', this.token);\n    return this.http.post(this.host +'/crops/add', crop, { headers: headers }).map((res:Response) => res.json())\n    }\n\n    getCrop(crop) {\n        this.access_token = JSON.parse(localStorage.getItem(\"user\"));\n        this.token = 'Bearer ' + this.access_token[\"access_token\"];\n        let headers = new Headers();\n        let body = {};        \n        let urlSearchParams = new URLSearchParams();\n        headers.append('Authorization', this.token);\n    return this.http.post(this.host +'/crops/'+ crop, body, { headers: headers }).map((res:Response) => res.json())\n    }\n\n    updateCrop(crop) {\n        this.access_token = JSON.parse(localStorage.getItem(\"user\"));\n        this.token = 'Bearer ' + this.access_token[\"access_token\"];\n        let headers = new Headers();\n        let body = {};        \n        let urlSearchParams = new URLSearchParams();\n        headers.append('Authorization', this.token);\n    return this.http.post(this.host +'/crops/'+ crop.id, crop, { headers: headers }).map((res:Response) => res.json())\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/crop-management/crop.service.ts","import { Component } from '@angular/core';\nimport { CropService } from './crop.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  templateUrl: 'add-crop.component.html'\n})\nexport class AddCropComponent {\n\tprivate crop = {\n    terms:\"Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum Lorem Ipsum\"\n  };\n  constructor(private router : Router, private _cropService: CropService) { }\n\n  addCrop() {\n  \tthis._cropService.addCrop(this.crop)\n                       .subscribe(\n                           res => {\n                             this.router.navigate(['/crop/list']);\n                           },\n                           err => {\n\n                           });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/crop-management/add-crop.component.ts","import { Component, OnInit } from '@angular/core';\nimport {PaginationInstance} from 'ng2-pagination';\nimport { CropService } from './crop.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-crop-management',\n  templateUrl: './list-crop.component.html',\n  styleUrls: ['./list-crop.component.scss']\n  // providers: []\n})\n\nexport class ListCropComponent implements OnInit {\n  private isLoading:boolean = true;\n  public err_message = '';\n  public rows:Array<any> = [];\n  public columns:Array<any> = [\n    {title: 'Crop', name: 'name'},\n    {title: 'Offer Price', name: 'price'},\n    {title: 'Qty', name: 'quantity_per_pack'},\n    {title: 'Category', name: 'category'},\n    {title: 'Grade', name: 'grade'},\n    {title: 'Color', name: 'color'}\n  ];\n  public page:number = 1;\n  public itemsPerPage:number = 10;\n  public maxSize:number = 5;\n  public numPages:number = 1;\n  public length:number = 0;\n\n  public config:any = {\n    paging: true,\n    sorting: {columns: this.columns},\n    filtering: {filterString: ''},\n    className: ['table-striped', 'table-bordered']\n  };\n\n  private data = [];\n\n  public constructor(private router : Router, private _cropService: CropService) {\n    this.length = this.data.length;\n    this._cropService.croplisting()\n                       .subscribe(\n                           res => {\n                             this.data = res[\"Data\"];\n                             this.isLoading = false;\n                             this.onChangeTable(this.config);\n                           },\n                           err => {\n                             this.isLoading = false;\n                             this.err_message = \"No record to display\";\n                           });\n\n\n  }\n\n  public ngOnInit():void {\n    this.onChangeTable(this.config);\n  }\n\n  public changePage(page:any, data:Array<any> = this.data):Array<any> {\n    let start = (page.page - 1) * page.itemsPerPage;\n    let end = page.itemsPerPage > -1 ? (start + page.itemsPerPage) : data.length;\n    // create service here to fetch data from server;\n    return data.slice(start, end);\n  }\n\n  public changeSort(data:any, config:any):any {\n    if (!config.sorting) {\n      return data;\n    }\n\n    let columns = this.config.sorting.columns || [];\n    let columnName:string = void 0;\n    let sort:string = void 0;\n\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].sort !== '' && columns[i].sort !== false) {\n        columnName = columns[i].name;\n        sort = columns[i].sort;\n      }\n    }\n\n    if (!columnName) {\n      return data;\n    }\n\n    // simple sorting\n    return data.sort((previous:any, current:any) => {\n      if (previous[columnName] > current[columnName]) {\n        return sort === 'desc' ? -1 : 1;\n      } else if (previous[columnName] < current[columnName]) {\n        return sort === 'asc' ? -1 : 1;\n      }\n      return 0;\n    });\n  }\n\n  public changeFilter(data:any, config:any):any {\n    let filteredData:Array<any> = data;\n    this.columns.forEach((column:any) => {\n      if (column.filtering) {\n        filteredData = filteredData.filter((item:any) => {\n          return item[column.name].match(column.filtering.filterString);\n        });\n      }\n    });\n\n    if (!config.filtering) {\n      return filteredData;\n    }\n\n    if (config.filtering.columnName) {\n      return filteredData.filter((item:any) =>\n        item[config.filtering.columnName].match(this.config.filtering.filterString));\n    }\n\n    let tempArray:Array<any> = [];\n    filteredData.forEach((item:any) => {\n      let flag = false;\n      this.columns.forEach((column:any) => {\n        if (item[column.name].toString().match(this.config.filtering.filterString)) {\n          flag = true;\n        }\n      });\n      if (flag) {\n        tempArray.push(item);\n      }\n    });\n    filteredData = tempArray;\n\n    return filteredData;\n  }\n\n  public onChangeTable(config:any, page:any = {page: this.page, itemsPerPage: this.itemsPerPage}):any {\n    this.err_message ='';\n    if (config.filtering) {\n      Object.assign(this.config.filtering, config.filtering);\n    }\n\n    if (config.sorting) {\n      Object.assign(this.config.sorting, config.sorting);\n    }\n    \n    let filteredData = this.changeFilter(this.data, this.config);\n    let sortedData = this.changeSort(filteredData, this.config);\n    this.rows = page && config.paging ? this.changePage(page, sortedData) : sortedData;\n    this.length = sortedData.length;\n  }\n\n  public onCellClick(data: any): any {\n    this.router.navigate(['/crop/list/' + data[\"row\"][\"id\"]]);\n  }\t\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/crop-management/list-crop.component.ts","import { Component } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { CropService } from './crop.service';\n@Component({\n  templateUrl: 'view-crop.component.html'\n})\nexport class ViewCropComponent {\n\tprivate cropID = '';\n\tprivate crop = {};\n  private copy_crop = {};\n  private edit = false;\n  constructor(route: ActivatedRoute,private _cropService: CropService) { \n  \tthis.cropID = route.snapshot.params['id'];\n  \tthis._cropService.getCrop(this.cropID)\n                       .subscribe(\n                           res => {\n                             this.crop = res[\"Data\"][0];\n                           },\n                           err => {\n\n                           });\n  }\n\n  editCrop() {\n    this.edit = !this.edit;\n    this.copy_crop = JSON.parse(JSON.stringify(this.crop));\n  }\n\n  cancel() {\n    this.edit = !this.edit;\n    this.crop = JSON.parse(JSON.stringify(this.copy_crop));\n  }\n\n  save() {\n    this._cropService.updateCrop(this.crop)\n                       .subscribe(\n                           res => {\n                             this.edit = !this.edit;\n                             this.copy_crop = JSON.parse(JSON.stringify(this.crop));\n                           },\n                           err => {\n\n                           });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/crop-management/view-crop.component.ts"],"sourceRoot":""}