{"version":3,"sources":["webpack:///./src/app/equipment-management/list-component/list-equipment.component.scss","webpack:///./src/app/equipment-management/addupdate-component/addupdate-equipment.component.html","webpack:///./src/app/equipment-management/list-component/list-equipment.component.html","webpack:///./src/app/equipment-management/view-component/view-equipment.component.html","webpack:///./src/app/equipment-management/equipment-management.module.ts","webpack:///./~/ng2-table/components/table/ng-table-filtering.directive.js?4491*","webpack:///./~/ng2-table/components/table/ng-table-paging.directive.js?0fb4*","webpack:///./~/ng2-table/components/table/ng-table-sorting.directive.js?07df*","webpack:///./~/ng2-table/components/table/ng-table.component.js?745b*","webpack:///./~/ng2-table/components/ng-table-directives.js?c8b8*","webpack:///./~/ng2-table/components/ng-table-module.js?6bdc*","webpack:///./~/ng2-table/ng2-table.js?a372*","webpack:///./src/app/equipment-management/services/equipment.service.ts","webpack:///./src/app/equipment-management/addupdate-component/addupdate-equipment.component.ts","webpack:///./src/app/equipment-management/list-component/list-equipment.component.ts","webpack:///./src/app/equipment-management/view-component/view-equipment.component.ts","webpack:///./src/app/equipment-management/equipment-management-routing.module.ts"],"names":[],"mappings":";;;;;AAAA;AACA;;;AAGA;AACA,wCAAyC,uBAAuB,gCAAgC;;AAEhG;;;AAGA;AACA,2C;;;;;;;ACXA,qiBAAqiB,QAAQ,gfAAgf,m9JAAm9J,MAAM,g7F;;;;;;;ACAt/L,o0BAAo0B,04CAA04C,MAAM,KAAK,UAAU,mC;;;;;;;ACAnuE,yhCAAyhC,gBAAgB,+PAA+P,oBAAoB,2WAA2W,+BAA+B,sRAAsR,iBAAiB,yTAAyT,qBAAqB,kRAAkR,uBAAuB,8TAA8T,oBAAoB,mUAAmU,gBAAgB,oTAAoT,iBAAiB,yQAAyQ,uBAAuB,yUAAyU,0BAA0B,ggB;;;;;;;;;;;;;;;;ACAjtI,oCAAyC;AACzC,uCAA+C;AAE/C,0DAAmF;AACnF,0DAAmF;AAEnF,+DAAkG;AAGlG,qEAAyF;AAazF,IAAa,yBAAyB;IAAtC;IAAyC,CAAC;IAAD,gCAAC;AAAD,CAAC;AAA7B,yBAAyB;IAXrC,eAAQ,CAAC;QACN,OAAO,EAAE;YACL,sEAAgC;YAChC,qBAAY;SACf;QACD,YAAY,EAAE;YACV,iDAAsB;YACtB,2DAA2B;YAC3B,iDAAsB;SACzB;KACJ,CAAC;GACW,yBAAyB,CAAI;AAA7B,8DAAyB;;;;;;;;;ACtBtC;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gCAAgC,mCAAmC;AACnE;AACA;AACA,SAAS,iCAAiC,iCAAiC,IAAI;AAC/E;AACA;AACA;AACA,SAAS,2BAA2B;AACpC,SAAS,yBAAyB;AAClC;AACA;AACA,8BAA8B,qBAAqB;AACnD,0BAA0B,sBAAsB;AAChD,oBAAoB,qBAAqB;AACzC,4BAA4B,uEAAuE;AACnG;AACA;AACA,CAAC;AACD;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oCAAoC,gBAAgB;AACpD;AACA;AACA;AACA,SAAS,iCAAiC,8BAA8B,IAAI;AAC5E;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD,0BAA0B,sBAAsB;AAChD,oBAAoB,qBAAqB;AACzC,0BAA0B,gEAAgE;AAC1F;AACA;AACA,CAAC;AACD;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC,+BAA+B,IAAI;AAC7E;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD,oBAAoB,qBAAqB;AACzC,yBAAyB,sBAAsB;AAC/C,oBAAoB,qBAAqB;AACzC,0BAA0B,0DAA0D;AACpF;AACA;AACA,CAAC;AACD;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,gCAAgC,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,8BAA8B;AAC9D;AACA;AACA,qEAAqE,mBAAmB,EAAE;AAC1F;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA,SAAS;AACT;AACA,kFAAkF,wBAAwB,iDAAiD,kNAAkN,wBAAwB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","file":"3.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*.is-loading {\\n\\ttext-align: center;\\n\\tfont-size: 40px!important\\n}*/\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/equipment-management/list-component/list-equipment.component.scss\n// module id = 1000\n// module chunks = 3","module.exports = \"<div class=\\\"equipment-wrapper\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12 col-lg-12\\\">\\n            <div class=\\\"content-header\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li><a href=\\\"javascript:void(0)\\\">Dashboard</a></li>\\n                    <li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">Equipment Management</a></li>      \\n                </ol>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <strong>{{action}} Equipment</strong>\\n        </div>\\n        <div class=\\\"card-block\\\">\\n            <form role=\\\"form\\\" (ngSubmit)=\\\"submitEquipment()\\\" #addEquipmentForm=\\\"ngForm\\\">\\n                \\n               <div *ngIf=\\\"showMessage\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\"  (click)=\\\"closeMessage()\\\" aria-label=\\\"Close\\\">\\n                        <span aria-hidden=\\\"true\\\">&times;</span>\\n                    </button>\\n                    <strong>Success</strong> Equipment Added Successfully.\\n                </div>\\n                \\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"nf-name\\\">Equipment Name*</label>\\n                            <input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" [(ngModel)]=\\\"equipment.name\\\" required>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"category\\\">Category*</label>\\n                            <select id=\\\"category\\\" name=\\\"category\\\" class=\\\"form-control\\\" size=\\\"1\\\" [(ngModel)]=\\\"equipment.category\\\" required>\\n                                <option value=\\\"\\\">Please select</option>\\n                                <option value=\\\"1\\\">Option #1</option>\\n                                <option value=\\\"2\\\">Option #2</option>\\n                                <option value=\\\"3\\\">Option #3</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"companyManufacturer\\\">Company/Manufacturer*</label>\\n                            <select id=\\\"companyManufacturer\\\" name=\\\"companyManufacturer\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"equipment.companyManufacturer\\\" size=\\\"1\\\" required>\\n                                <option value=\\\"0\\\">Please select</option>\\n                                <option value=\\\"1\\\">Variety 1</option>\\n                                <option value=\\\"2\\\">Variety 2</option>\\n                                <option value=\\\"3\\\">Variety 3</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                      <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"model\\\">Model*</label>\\n                            <select id=\\\"model\\\" name=\\\"model\\\" class=\\\"form-control\\\" size=\\\"1\\\" [(ngModel)]=\\\"equipment.model\\\" required>\\n                                <option value=\\\"0\\\">Please select</option>\\n                                <option value=\\\"1\\\">Option #1</option>\\n                                <option value=\\\"2\\\">Option #2</option>\\n                                <option value=\\\"3\\\">Option #3</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"modelyear\\\">Model year</label>\\n                            <select id=\\\"modelyear\\\" name=\\\"modelyear\\\" class=\\\"form-control\\\" size=\\\"1\\\" [(ngModel)]=\\\"equipment.modelyear\\\">\\n                                <option value=\\\"\\\">Please select</option>\\n                                <option value=\\\"2010\\\">2010</option>                                \\n                                <option value=\\\"2011\\\">2011</option>                                \\n                                <option value=\\\"2012\\\">2012</option>                                \\n                                <option value=\\\"2013\\\">2013</option>                                \\n                                <option value=\\\"2014\\\">2014</option>                                \\n                                <option value=\\\"2015\\\">2015</option>                                \\n                                <option value=\\\"2016\\\">2016</option>                                \\n                                <option value=\\\"2017\\\">2017</option>                                                                \\n                            </select>\\n                        </div>\\n                    </div>\\n                \\n                    <div class=\\\"col-sm-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                            <label for=\\\"enginePower\\\">Engine power</label>\\n                            <input type=\\\"text\\\" id=\\\"enginePower\\\" name=\\\"enginePower\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"equipment.enginepower\\\" placeholder=\\\"Enter Engine Power\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                 <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <input type=\\\"radio\\\"  name=\\\"rentSell\\\" class=\\\"\\\" value=\\\"rent\\\"  [(ngModel)]=\\\"equipment.rentSell\\\" checked required>\\n                            <label for=\\\"nf-rentslell\\\">Rent</label>\\n                            &nbsp;&nbsp;                            \\n                            <input type=\\\"radio\\\" name=\\\"rentSell\\\" class=\\\"\\\" value=\\\"sell\\\"  [(ngModel)]=\\\"equipment.rentSell\\\" required>\\n                            <label for=\\\"rentSell\\\">sell</label>\\n                        </div>                      \\n                    </div>\\n\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"rate\\\"></label>                         \\n                            <input type=\\\"text\\\" id=\\\"rate\\\" name=\\\"rate\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"equipment.rate\\\" placeholder=\\\"Enter Rate/hr\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"usage\\\">Usage*</label>\\n                            <textarea type=\\\"text\\\" id=\\\"usage\\\" name=\\\"usage\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"equipment.usage\\\" placeholder=\\\"\\\" rows=\\\"4\\\" required></textarea>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"description\\\">Description*</label>\\n                            <textarea type=\\\"text\\\" id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"equipment.description\\\" placeholder=\\\"\\\" rows=\\\"4\\\" required></textarea>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"termsConditions\\\">Terms & Conditions</label>\\n                            <textarea type=\\\"text\\\" id=\\\"termsConditions\\\" name=\\\"termsConditions\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"equipment.termsConditions\\\" placeholder=\\\"\\\" rows=\\\"4\\\"></textarea>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label for=\\\"nf-image\\\">Image</label>\\n                            <input type=\\\"file\\\" name=\\\"\\\" class=\\\"form-control\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"card-footer\\\">\\n                    <button type=\\\"reset\\\" class=\\\"btn btn-danger\\\"><i class=\\\"fa fa-ban\\\"></i> Reset</button>\\n                    <button type=\\\"submit\\\" class=\\\"pull-right btn btn-primary\\\" [disabled]=\\\"!addEquipmentForm.valid\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i> Save</button>\\n                </div>\\n            </form>\\n        </div>\\n    </div> <!-- .card -->\\n</div> <!-- .equipment-wrapper -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/equipment-management/addupdate-component/addupdate-equipment.component.html\n// module id = 1017\n// module chunks = 3","module.exports = \"<!-- \\n<div class=\\\"overlayloader\\\">     \\n     <div class=\\\"loader\\\"></div>\\n</div>  -->\\n\\n<div class=\\\"equipment-wrapper\\\">      \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12 col-lg-12\\\">\\n            <div class=\\\"content-header\\\">\\n                <ol class=\\\"breadcrumb\\\">\\n                    <li><a href=\\\"javascript:void(0)\\\">Dashboard</a></li>\\n                    <li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">Equipment Management</a></li>      \\n                </ol>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"isNewAdded\\\" class=\\\"alert alert-success alert-dismissible fade show\\\" role=\\\"alert\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\"  (click)=\\\"closeMessage()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n        <strong>Success</strong> Equipment Added Successfully.\\n    </div>\\n\\n    <div class=\\\"card\\\">      \\n        \\n        <div class=\\\"card-header\\\">\\n          <input type=\\\"text\\\" name=\\\"\\\" placeholder=\\\"Search...\\\" [(ngModel)]=\\\"search\\\" (ngModelChange)=\\\"doSomething($event)\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" [routerLink]=\\\"['/equipment/add']\\\">Add Equipment</button>          \\n        </div>\\n\\n        <ng-table [config]=\\\"config\\\"\\n                  (tableChanged)=\\\"onChangeTable(config)\\\"\\n                  (cellClicked)=\\\"onCellClick($event)\\\"\\n                  [rows]=\\\"rows\\\" [columns]=\\\"columns\\\">\\n        </ng-table>\\n\\n        <!-- loader -->\\n        <div *ngIf=\\\"isLoading\\\" class=\\\"is-loading\\\"><i class=\\\"page-loader\\\"></i></div>\\n\\n        <pagination *ngIf=\\\"config.paging\\\"\\n                    class=\\\"pagination-sm\\\"\\n                    [(ngModel)]=\\\"page\\\"\\n                    [totalItems]=\\\"length\\\"\\n                    [itemsPerPage]=\\\"itemsPerPage\\\"\\n                    [maxSize]=\\\"maxSize\\\"\\n                    [boundaryLinks]=\\\"true\\\"\\n                    [rotate]=\\\"false\\\"\\n                    (pageChanged)=\\\"onChangeTable(config, $event)\\\"\\n                    (numPages)=\\\"numPages = $event\\\">\\n        </pagination>\\n        <p *ngIf=\\\"config.paging\\\" class=\\\"card card-block card-header\\\">Page: {{page}} / {{numPages}}</p>\\n        \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/equipment-management/list-component/list-equipment.component.html\n// module id = 1018\n// module chunks = 3","module.exports = \"<div class=\\\"equipment-wrapper\\\">    \\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 col-lg-12\\\">\\r\\n            <div class=\\\"content-header\\\">\\r\\n                <ol class=\\\"breadcrumb\\\">\\r\\n                    <li><a href=\\\"javascript:void(0)\\\">Dashboard</a></li>\\r\\n                    <li class=\\\"active\\\"><a href=\\\"javascript:void(0)\\\">Equipment Management</a></li>      \\r\\n                </ol>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            <strong>View Equipment</strong>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"updateEquipment(equipment.id)\\\">Edit Equipment</button>              \\r\\n        </div>\\r\\n        <div class=\\\"card-block\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"nf-name\\\">Equipment Name</label>\\r\\n                        <p>{{equipment.name}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"category\\\">Category</label>\\r\\n                        <p>{{equipment.category}}</p>                            \\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"companyManufacturer\\\">Company/Manufacturer</label>\\r\\n                        <p>{{equipment.companyManufacturer}}</p>                           \\r\\n                    </div>\\r\\n                </div>\\r\\n                  <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"model\\\">Model</label>\\r\\n                        <p>{{equipment.model}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"modelyear\\\">Model year</label>\\r\\n                        <p>{{equipment.modelyear}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            \\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"enginePower\\\">Engine power</label>\\r\\n                        <p>{{equipment.enginepower}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n             <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"nf-rentslell\\\">Rent/sell</label>\\r\\n                        <p>{{equipment.rentSell}}</p>                        \\r\\n                    </div>                      \\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"rate\\\">Price</label>                         \\r\\n                        <p>{{equipment.rate}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"usage\\\">Usage</label>\\r\\n                        <p>{{equipment.usage}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"description\\\">Description</label>\\r\\n                        <p>{{equipment.description}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"termsConditions\\\">Terms & Conditions</label>\\r\\n                        <p>{{equipment.termsConditiop}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"image\\\">Image</label>\\r\\n                        <p>Not Available</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>                           \\r\\n        </div>\\r\\n    </div> <!-- .card -->\\r\\n</div> <!-- .equipment-wrapper -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/equipment-management/view-component/view-equipment.component.html\n// module id = 1019\n// module chunks = 3","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListEquipmentComponent } from './list-component/list-equipment.component';\nimport { ViewEquipmentComponent } from './view-component/view-equipment.component';\n\nimport { AddUpdateEquipmentComponent } from './addupdate-component/addupdate-equipment.component';\n\n\nimport { EquipmentManagementRoutingModule } from './equipment-management-routing.module';\n\n@NgModule({\n    imports: [\n        EquipmentManagementRoutingModule,\n        CommonModule    \n    ],\n    declarations: [\n        ListEquipmentComponent,\n        AddUpdateEquipmentComponent,\n        ViewEquipmentComponent        \n    ]\n})\nexport class EquipmentManagementModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/equipment-management/equipment-management.module.ts","\"use strict\";\nvar core_1 = require('@angular/core');\n// import {setProperty} from 'angular2/ts/src/core/forms/directives/shared';\nfunction setProperty(renderer, elementRef, propName, propValue) {\n    renderer.setElementProperty(elementRef, propName, propValue);\n}\nvar NgTableFilteringDirective = (function () {\n    function NgTableFilteringDirective(element, renderer) {\n        this.ngTableFiltering = {\n            filterString: '',\n            columnName: 'name'\n        };\n        this.tableChanged = new core_1.EventEmitter();\n        this.element = element;\n        this.renderer = renderer;\n        // Set default value for filter\n        setProperty(this.renderer, this.element, 'value', this.ngTableFiltering.filterString);\n    }\n    Object.defineProperty(NgTableFilteringDirective.prototype, \"config\", {\n        get: function () {\n            return this.ngTableFiltering;\n        },\n        set: function (value) {\n            this.ngTableFiltering = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTableFilteringDirective.prototype.onChangeFilter = function (event) {\n        this.ngTableFiltering.filterString = event;\n        this.tableChanged.emit({ filtering: this.ngTableFiltering });\n    };\n    NgTableFilteringDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[ngTableFiltering]' },] },\n    ];\n    /** @nocollapse */\n    NgTableFilteringDirective.ctorParameters = [\n        { type: core_1.ElementRef, },\n        { type: core_1.Renderer, },\n    ];\n    NgTableFilteringDirective.propDecorators = {\n        'ngTableFiltering': [{ type: core_1.Input },],\n        'tableChanged': [{ type: core_1.Output },],\n        'config': [{ type: core_1.Input },],\n        'onChangeFilter': [{ type: core_1.HostListener, args: ['input', ['$event.target.value'],] },],\n    };\n    return NgTableFilteringDirective;\n}());\nexports.NgTableFilteringDirective = NgTableFilteringDirective;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/table/ng-table-filtering.directive.js\n// module id = 946\n// module chunks = 1 2 3 4 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar NgTablePagingDirective = (function () {\n    function NgTablePagingDirective() {\n        this.ngTablePaging = true;\n        this.tableChanged = new core_1.EventEmitter();\n    }\n    Object.defineProperty(NgTablePagingDirective.prototype, \"config\", {\n        get: function () {\n            return this.ngTablePaging;\n        },\n        set: function (value) {\n            this.ngTablePaging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTablePagingDirective.prototype.onChangePage = function (event) {\n        // Object.assign(this.config, event);\n        if (this.ngTablePaging) {\n            this.tableChanged.emit({ paging: event });\n        }\n    };\n    NgTablePagingDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[ngTablePaging]' },] },\n    ];\n    /** @nocollapse */\n    NgTablePagingDirective.ctorParameters = [];\n    NgTablePagingDirective.propDecorators = {\n        'ngTablePaging': [{ type: core_1.Input },],\n        'tableChanged': [{ type: core_1.Output },],\n        'config': [{ type: core_1.Input },],\n        'onChangePage': [{ type: core_1.HostListener, args: ['pagechanged', ['$event'],] },],\n    };\n    return NgTablePagingDirective;\n}());\nexports.NgTablePagingDirective = NgTablePagingDirective;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/table/ng-table-paging.directive.js\n// module id = 947\n// module chunks = 1 2 3 4 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar NgTableSortingDirective = (function () {\n    function NgTableSortingDirective() {\n        this.sortChanged = new core_1.EventEmitter();\n    }\n    Object.defineProperty(NgTableSortingDirective.prototype, \"config\", {\n        get: function () {\n            return this.ngTableSorting;\n        },\n        set: function (value) {\n            this.ngTableSorting = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTableSortingDirective.prototype.onToggleSort = function (event) {\n        if (event) {\n            event.preventDefault();\n        }\n        if (this.ngTableSorting && this.column && this.column.sort !== false) {\n            switch (this.column.sort) {\n                case 'asc':\n                    this.column.sort = 'desc';\n                    break;\n                case 'desc':\n                    this.column.sort = '';\n                    break;\n                default:\n                    this.column.sort = 'asc';\n                    break;\n            }\n            this.sortChanged.emit(this.column);\n        }\n    };\n    NgTableSortingDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[ngTableSorting]' },] },\n    ];\n    /** @nocollapse */\n    NgTableSortingDirective.ctorParameters = [];\n    NgTableSortingDirective.propDecorators = {\n        'ngTableSorting': [{ type: core_1.Input },],\n        'column': [{ type: core_1.Input },],\n        'sortChanged': [{ type: core_1.Output },],\n        'config': [{ type: core_1.Input },],\n        'onToggleSort': [{ type: core_1.HostListener, args: ['click', ['$event'],] },],\n    };\n    return NgTableSortingDirective;\n}());\nexports.NgTableSortingDirective = NgTableSortingDirective;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/table/ng-table-sorting.directive.js\n// module id = 948\n// module chunks = 1 2 3 4 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar NgTableComponent = (function () {\n    function NgTableComponent(sanitizer) {\n        this.sanitizer = sanitizer;\n        // Table values\n        this.rows = [];\n        // Outputs (Events)\n        this.tableChanged = new core_1.EventEmitter();\n        this.cellClicked = new core_1.EventEmitter();\n        this.showFilterRow = false;\n        this._columns = [];\n        this._config = {};\n    }\n    Object.defineProperty(NgTableComponent.prototype, \"config\", {\n        get: function () {\n            return this._config;\n        },\n        set: function (conf) {\n            if (!conf.className) {\n                conf.className = 'table-striped table-bordered';\n            }\n            if (conf.className instanceof Array) {\n                conf.className = conf.className.join(' ');\n            }\n            this._config = conf;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgTableComponent.prototype, \"columns\", {\n        get: function () {\n            return this._columns;\n        },\n        set: function (values) {\n            var _this = this;\n            values.forEach(function (value) {\n                if (value.filtering) {\n                    _this.showFilterRow = true;\n                }\n                if (value.className && value.className instanceof Array) {\n                    value.className = value.className.join(' ');\n                }\n                var column = _this._columns.find(function (col) { return col.name === value.name; });\n                if (column) {\n                    Object.assign(column, value);\n                }\n                if (!column) {\n                    _this._columns.push(value);\n                }\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTableComponent.prototype.sanitize = function (html) {\n        return this.sanitizer.bypassSecurityTrustHtml(html);\n    };\n    Object.defineProperty(NgTableComponent.prototype, \"configColumns\", {\n        get: function () {\n            var sortColumns = [];\n            this.columns.forEach(function (column) {\n                if (column.sort) {\n                    sortColumns.push(column);\n                }\n            });\n            return { columns: sortColumns };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgTableComponent.prototype.onChangeTable = function (column) {\n        this._columns.forEach(function (col) {\n            if (col.name !== column.name && col.sort !== false) {\n                col.sort = '';\n            }\n        });\n        this.tableChanged.emit({ sorting: this.configColumns });\n    };\n    NgTableComponent.prototype.getData = function (row, propertyName) {\n        return propertyName.split('.').reduce(function (prev, curr) { return prev[curr]; }, row);\n    };\n    NgTableComponent.prototype.cellClick = function (row, column) {\n        this.cellClicked.emit({ row: row, column: column });\n    };\n    NgTableComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'ng-table',\n                    template: \"\\n    <table class=\\\"table dataTable\\\" ngClass=\\\"{{config.className || ''}}\\\"\\n           role=\\\"grid\\\" style=\\\"width: 100%;\\\">\\n      <thead>\\n        <tr role=\\\"row\\\">\\n          <th *ngFor=\\\"let column of columns\\\" [ngTableSorting]=\\\"config\\\" [column]=\\\"column\\\" \\n              (sortChanged)=\\\"onChangeTable($event)\\\" ngClass=\\\"{{column.className || ''}}\\\">\\n            {{column.title}}\\n            <i *ngIf=\\\"config && column.sort\\\" class=\\\"pull-right fa\\\"\\n              [ngClass]=\\\"{'fa-chevron-down': column.sort === 'desc', 'fa-chevron-up': column.sort === 'asc'}\\\"></i>\\n          </th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n      <tr *ngIf=\\\"showFilterRow\\\">\\n        <td *ngFor=\\\"let column of columns\\\">\\n          <input *ngIf=\\\"column.filtering\\\" placeholder=\\\"{{column.filtering.placeholder}}\\\"\\n                 [ngTableFiltering]=\\\"column.filtering\\\"\\n                 class=\\\"form-control\\\"\\n                 style=\\\"width: auto;\\\"\\n                 (tableChanged)=\\\"onChangeTable(config)\\\"/>\\n        </td>\\n      </tr>\\n        <tr *ngFor=\\\"let row of rows\\\">\\n          <td (click)=\\\"cellClick(row, column.name)\\\" *ngFor=\\\"let column of columns\\\" [innerHtml]=\\\"sanitize(getData(row, column.name))\\\"></td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NgTableComponent.ctorParameters = [\n        { type: platform_browser_1.DomSanitizer, },\n    ];\n    NgTableComponent.propDecorators = {\n        'rows': [{ type: core_1.Input },],\n        'config': [{ type: core_1.Input },],\n        'tableChanged': [{ type: core_1.Output },],\n        'cellClicked': [{ type: core_1.Output },],\n        'columns': [{ type: core_1.Input },],\n    };\n    return NgTableComponent;\n}());\nexports.NgTableComponent = NgTableComponent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/table/ng-table.component.js\n// module id = 949\n// module chunks = 1 2 3 4 5","\"use strict\";\nvar ng_table_component_1 = require('./table/ng-table.component');\nvar ng_table_filtering_directive_1 = require('./table/ng-table-filtering.directive');\nvar ng_table_paging_directive_1 = require('./table/ng-table-paging.directive');\nvar ng_table_sorting_directive_1 = require('./table/ng-table-sorting.directive');\nexports.NG_TABLE_DIRECTIVES = [ng_table_component_1.NgTableComponent, ng_table_filtering_directive_1.NgTableFilteringDirective, ng_table_paging_directive_1.NgTablePagingDirective, ng_table_sorting_directive_1.NgTableSortingDirective];\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/ng-table-directives.js\n// module id = 950\n// module chunks = 1 2 3 4 5","\"use strict\";\nvar core_1 = require('@angular/core');\nvar common_1 = require('@angular/common');\nvar ng_table_component_1 = require('./table/ng-table.component');\nvar ng_table_filtering_directive_1 = require('./table/ng-table-filtering.directive');\nvar ng_table_paging_directive_1 = require('./table/ng-table-paging.directive');\nvar ng_table_sorting_directive_1 = require('./table/ng-table-sorting.directive');\nvar Ng2TableModule = (function () {\n    function Ng2TableModule() {\n    }\n    Ng2TableModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [common_1.CommonModule],\n                    declarations: [ng_table_component_1.NgTableComponent, ng_table_filtering_directive_1.NgTableFilteringDirective, ng_table_paging_directive_1.NgTablePagingDirective, ng_table_sorting_directive_1.NgTableSortingDirective],\n                    exports: [ng_table_component_1.NgTableComponent, ng_table_filtering_directive_1.NgTableFilteringDirective, ng_table_paging_directive_1.NgTablePagingDirective, ng_table_sorting_directive_1.NgTableSortingDirective]\n                },] },\n    ];\n    /** @nocollapse */\n    Ng2TableModule.ctorParameters = [];\n    return Ng2TableModule;\n}());\nexports.Ng2TableModule = Ng2TableModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/components/ng-table-module.js\n// module id = 951\n// module chunks = 1 2 3 4 5","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar ng_table_component_1 = require('./components/table/ng-table.component');\nvar ng_table_filtering_directive_1 = require('./components/table/ng-table-filtering.directive');\nvar ng_table_paging_directive_1 = require('./components/table/ng-table-paging.directive');\nvar ng_table_sorting_directive_1 = require('./components/table/ng-table-sorting.directive');\n__export(require('./components/table/ng-table.component'));\n__export(require('./components/table/ng-table-filtering.directive'));\n__export(require('./components/table/ng-table-paging.directive'));\n__export(require('./components/table/ng-table-sorting.directive'));\n__export(require('./components/ng-table-directives'));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    directives: [\n        ng_table_component_1.NgTableComponent,\n        ng_table_filtering_directive_1.NgTableFilteringDirective,\n        ng_table_sorting_directive_1.NgTableSortingDirective,\n        ng_table_paging_directive_1.NgTablePagingDirective\n    ]\n};\nvar ng_table_module_1 = require('./components/ng-table-module');\nexports.Ng2TableModule = ng_table_module_1.Ng2TableModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-table/ng2-table.js\n// module id = 952\n// module chunks = 1 2 3 4 5","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\n\n@Injectable()\nexport class EquipmentService {\n\t\n    private host         = \"https://efarmapi.herokuapp.com\";\n    private access_token = {};\n    private token        = '';\n\n  \tconstructor(private _http: Http) { }\n  \t\n  \tgetAllEquipments() {\n  \t\t\n        let headers         = new Headers();\n        let urlSearchParams = new URLSearchParams();\n\n        this.access_token   = JSON.parse(localStorage.getItem(\"user\"));\n        this.token          = 'Bearer ' + this.access_token[\"access_token\"];\n\n        headers.append('Authorization', this.token );\n\t\treturn this._http.get(this.host +'/equipment', { headers: headers }).map((res:Response) => res.json());\n  \t}\n\n  \tpostEquipment( equipment ) {\n\n      \tlet headers         = new Headers();\n      \tlet urlSearchParams = new URLSearchParams();\n\n        this.access_token   = JSON.parse(localStorage.getItem(\"user\"));\n        this.token          = 'Bearer ' + this.access_token[\"access_token\"];\n        \n        headers.append('Authorization', this.token );\n    \treturn this._http.post(this.host +'/equipment', equipment, { headers: headers }).map((res:Response) => res.json());\n    }\n\n    /** get a single Equipment by ID **/\n    getEquipment( equipmentID ) {\n        let headers         = new Headers();\n        let urlSearchParams = new URLSearchParams();\n        let body            = {};\n\n        this.access_token   = JSON.parse(localStorage.getItem(\"user\"));\n        this.token          = 'Bearer ' + this.access_token[\"access_token\"];\n        \n        headers.append('Authorization', this.token );\n        return this._http.get( this.host +'/equipment/' + equipmentID, { headers: headers }).map((res:Response) => res.json());\n    }\n\n    /** update equipment **/\n    putEquipment(equipment) {\n        \n        let headers         = new Headers();\n        let urlSearchParams = new URLSearchParams();\n\n        this.access_token   = JSON.parse(localStorage.getItem(\"user\"));\n        this.token          = 'Bearer ' + this.access_token[\"access_token\"];\n        \n        headers.append('Authorization', this.token );\n        return this._http.put(this.host +'/equipment/'+ equipment.id, equipment, { headers: headers }).map((res:Response) => res.json());\n    }\n\n    /** DeleteID equipment by ID **/\n    deleteEquipment( equipmentID ) {\n        \n        let headers         = new Headers();\n        let urlSearchParams = new URLSearchParams();\n\n        this.access_token   = JSON.parse(localStorage.getItem(\"user\"));\n        this.token          = 'Bearer ' + this.access_token[\"access_token\"];\n        \n        headers.append('Authorization', this.token );\n        return this._http.delete(this.host +'/equipment/'+ equipmentID,  { headers: headers }).map((res:Response) => res.json());\n    }        \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/equipment-management/services/equipment.service.ts","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n// import { FormGroup, FormBuilder ,Validators } from '@angular/forms';\n\nimport { EquipmentService } from '../services/equipment.service';\n\n@Component({\n    templateUrl: 'addupdate-equipment.component.html'\n})\nexport class AddUpdateEquipmentComponent {\n    \n    private equipment     = {};\n    private allEquipments = [];\n\n    private equipmentID: any;\n    private response:any;\n    \n    private showMessage:boolean = false;\n\n    private action:string = 'Add';\n\n    constructor(private _router : Router,  private _activateRouter: ActivatedRoute, private _equipmentService: EquipmentService) {\n        this.equipmentID = _activateRouter.snapshot.params['id'];        \n        if( this.equipmentID ) {\n            this._equipmentService.getEquipment(this.equipmentID).subscribe( res => { this.equipment = res; this.action = 'Update' }, err => {});\n        }        \n    }\n\n    submitEquipment() {\n        console.log('submitting Equipment...');\n\n        if( this.action == 'Update' ) {\n            this.updateEquipment();            \n        }else {\n           this.addEquipment();\n        }\n    }\n\n    addEquipment() {\n        console.log('Posting Equipment...');\n\n        this._equipmentService.postEquipment(this.equipment).subscribe(res => {\n            this.response    = res;\n            this.showMessage = true;\n            this.equipment   = {};\n            this._router.navigate(['/equipment/list', {data: \"success\"} ]);\n            console.log(this.response)\n        });      \n    \t\n    }\n\n\n    updateEquipment() {\n        console.log('Udpating Equipment...');\n        \n        this._equipmentService.putEquipment(this.equipment).subscribe(res => {\n            this.response    = res;\n            this.showMessage = true;\n            this.equipment   = {};\n            this._router.navigate(['/equipment/list', {data: \"success\"} ]);\n        }); \n    }\n\n    closeMessage() {\n        this.showMessage = false;\n    } \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/equipment-management/addupdate-component/addupdate-equipment.component.ts","import { Component, OnInit } from '@angular/core';\n// import { cropTable } from './crop-seed'\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport {PaginationInstance} from 'ng2-pagination';\nimport { EquipmentService } from '../services/equipment.service';\n\n\n\n@Component({\n    selector: 'app-equipment-management',\n    templateUrl: './list-equipment.component.html',\n    styleUrls: ['./list-equipment.component.scss']\n})\nexport class ListEquipmentComponent implements OnInit {\n\n    private id;\n    private sub;\n    \n\n    private isLoading:boolean     = true;\n    private isPageLoading:boolean = true;\n    private  isNewAdded:any       = false;\n\n\n    public rows:Array<any> = [];\n    public columns:Array<any> = [\n        // { title: 'Image', name: 'image'},        \n        { title: 'Farm Equipment', name: 'name'},\n        { title: 'description', name: 'description'},        \n        // { title: 'District', name: 'district'},\n        // { title: 'Type', name: 'type'},\n        { title: 'Model Year.', name: 'modelyear'},\n        // { title: 'Qty', name: 'qty'},\n        // { title: 'Price', name: 'price'}\n    ];\n    public page:number         = 1;\n    public itemsPerPage:number = 10;\n    public maxSize:number      = 5;\n    public numPages:number     = 1;\n    public length:number       = 0;\n\n    public config:any = {\n    paging: true,\n    sorting: {columns: this.columns},\n    filtering: {filterString: ''},\n    className: ['table-striped', 'table-bordered']\n    };\n\n    // private data:Array<any> = this.TableData;\n    private data = [];\n\n    public constructor(private activatedRouter : ActivatedRoute,private router : Router, private _equipmentService: EquipmentService) { \n\n        this.length = this.data.length;\n\n        this._equipmentService.getAllEquipments().subscribe(allEquipments => {\n            this.data = allEquipments;\n            this.onChangeTable(this.config);\n            this.isLoading = false;\n            console.log(\"allEquipments loaded\");\n        }); \n    }\n\n    public ngOnInit():void {\n        // this.onChangeTable(this.config);\n        this.sub = this.activatedRouter.params.subscribe(params => {\n            this.id = +params['data']; // (+) converts string 'id' to a number\n            console.log(params);\n            this.isNewAdded = params.data; \n        });\n    }\n\n    closeMessage()  {\n        this.isNewAdded = false;\n    }\n\n  public changePage(page:any, data:Array<any> = this.data):Array<any> {\n    let start = (page.page - 1) * page.itemsPerPage;\n    let end   = page.itemsPerPage > -1 ? (start + page.itemsPerPage) : data.length;\n    // create service here to fetch data from server;\n    return data.slice(start, end);\n  }\n\n  public changeSort(data:any, config:any):any {\n    if (!config.sorting) {\n      return data;\n    }\n\n    let columns = this.config.sorting.columns || [];\n    let columnName:string = void 0;\n    let sort:string = void 0;\n\n    for (let i = 0; i < columns.length; i++) {\n      if (columns[i].sort !== '' && columns[i].sort !== false) {\n        columnName = columns[i].name;\n        sort = columns[i].sort;\n      }\n    }\n\n    if (!columnName) {\n      return data;\n    }\n\n    // simple sorting\n    return data.sort((previous:any, current:any) => {\n      if (previous[columnName] > current[columnName]) {\n        return sort === 'desc' ? -1 : 1;\n      } else if (previous[columnName] < current[columnName]) {\n        return sort === 'asc' ? -1 : 1;\n      }\n      return 0;\n    });\n  }\n\n  public changeFilter(data:any, config:any):any {\n    let filteredData:Array<any> = data;\n    this.columns.forEach((column:any) => {\n      if (column.filtering) {\n        filteredData = filteredData.filter((item:any) => {\n          return item[column.name].match(column.filtering.filterString);\n        });\n      }\n    });\n\n    if (!config.filtering) {\n      return filteredData;\n    }\n\n    if (config.filtering.columnName) {\n      return filteredData.filter((item:any) =>\n        item[config.filtering.columnName].match(this.config.filtering.filterString));\n    }\n\n    let tempArray:Array<any> = [];\n    filteredData.forEach((item:any) => {\n      let flag = false;\n      this.columns.forEach((column:any) => {\n        if (item[column.name].toString().match(this.config.filtering.filterString)) {\n          flag = true;\n        }\n      });\n      if (flag) {\n        tempArray.push(item);\n      }\n    });\n    filteredData = tempArray;\n\n    return filteredData;\n  }\n\n  public onChangeTable(config:any, page:any = {page: this.page, itemsPerPage: this.itemsPerPage}):any {\n    if (config.filtering) {\n      Object.assign(this.config.filtering, config.filtering);\n    }\n\n    if (config.sorting) {\n      Object.assign(this.config.sorting, config.sorting);\n    }\n    \n    let filteredData = this.changeFilter(this.data, this.config);\n    let sortedData = this.changeSort(filteredData, this.config);\n    this.rows = page && config.paging ? this.changePage(page, sortedData) : sortedData;\n    this.length = sortedData.length;\n  }\n\n    public onCellClick(data: any): any {   \n        console.log(\"testing...\")\n        this.router.navigate(['/equipment/list/' + data[\"row\"][\"id\"]]);  \n    }\t\n\n  // constructor() { }\n\n  // ngOnInit() {\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/equipment-management/list-component/list-equipment.component.ts","import { Component } from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\n\nimport { EquipmentService } from '../services/equipment.service';\n\n\n@Component({\n  templateUrl: 'view-equipment.component.html'\n})\nexport class ViewEquipmentComponent {\n\n    private equipmentID    = '';\n    private equipment      = {};\n    private copy_equipment = {};\n    private edit      = false;\n\n    constructor(private _router: Router, private _activatedRouter: ActivatedRoute, private _equipmentService: EquipmentService) {     \t\n        \n        this.equipmentID = _activatedRouter.snapshot.params['id'];\n        if( this.equipmentID ) {\n            this._equipmentService.getEquipment(this.equipmentID).subscribe( res => { this.equipment = res; console.log(res) }, err => {});\n        }    \n    }\n\n    updateEquipment( equipmentID ) {        \n        let route = '/equipment/update/'+equipmentID;\n        this._router.navigate([route]);       \n    }   \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/equipment-management/view-component/view-equipment.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule }   from '@angular/forms';\nimport { Ng2TableModule } from 'ng2-table/ng2-table';\nimport { PaginationModule } from 'ng2-bootstrap';\nimport { HttpModule } from '@angular/http';\n\nimport { ListEquipmentComponent } from './list-component/list-equipment.component';\nimport { ViewEquipmentComponent } from './view-component/view-equipment.component';\n\nimport { AddUpdateEquipmentComponent } from './addupdate-component/addupdate-equipment.component';\n\nimport { EquipmentService } from './services/equipment.service';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      title: 'equipment Management'\n    },\n    children: [\n      {\n        path: 'list',\n        component: ListEquipmentComponent,\n        data: {\n          title: 'List'\n        }\n      },\n      {\n        path: 'add',\n        component: AddUpdateEquipmentComponent,\n        data: {\n          title: 'Add'\n        }\n      },\n      {\n            path: 'list/:id',\n            component: ViewEquipmentComponent,\n            data: {\n              title: 'View Equipment'\n            }\n      },\n      {\n        path: 'update/:id',\n        component: AddUpdateEquipmentComponent,\n        data: {\n          title: 'Update Equipment'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    FormsModule,\n    Ng2TableModule,\n    PaginationModule,\n    HttpModule\n  ],\n  providers: [\n    EquipmentService\n  ],\n  exports: [\n    RouterModule,\n    FormsModule,\n    Ng2TableModule,\n    PaginationModule\n  ]\n})\nexport class EquipmentManagementRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/equipment-management/equipment-management-routing.module.ts"],"sourceRoot":""}